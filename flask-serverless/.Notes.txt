AWS SAM uses an infrastructure as code approach (on AWS with CloudFormation) to deploy the application

Files :
   - AppModel/
   - events/
   - tests/
   - __init__.py
   - template.yml
   - samconfig.toml

1. Initialize the Serverless project
   - sam init --runtime python3.8 --name ServerlessApp
   - At this stage we have our the application files ready in the Application/ repository

2. Replace the generated defaultApp by our Application/ application in a new app model AppModel/
   - cp ../Application/ ServerlessApp/AppModel
   - rm -rf defaultApp/

3. Add dependencies packages in the in the ./AppModel/requirements file
   - touch requirements.txt

4. Create Lambda Functions handlers that will be launched whenever an event (json format) is requested
   - Import all libraries in the main app (app.py)
   - Add the handler : def lambda_handler(event, context)

5. Build the serverless App Infra
   - Edit the Infra as Code file generated by this project ./template.yaml : CodeUri to /AppModel and Method to GET
   - Build the app : sam build

6. Deploy the application
   - Test locally the lambda function after editing the ./events/json.file : sam local invoke --event /usercode/flask_sam/events/event.json
   - Deploy the application on AWS : sam deploy --guided
   - Generate the SAM Configuration File : 

7. Notice outputs linked to the serverless app
   - Function IAM Role
   - App API
   - App Function
